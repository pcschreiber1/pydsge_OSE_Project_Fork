# rank.yaml ---
#
# Description: variant of Smets & Wouters model
# Authors: Gregor Boehl [boehl@econ.uni-frankfurt.de] & Felix Strobel [something@bundesbank.de]
# Last-Updated: 08/25/19
#
# non-separable preferences
# contains equations for Ricardian and h2m-consumers
# contains flex price eq. and reaction of CB to output gap
# 
# edit 08/25/19 (gboehl): smoothing over notional rate, "activate" ARMAs, edit initial values
# edit 08/26/19 (gboehl): add prior for sig_l **PLEASE CHECK**
# edit 08/27/19 (gboehl): add priors for lamb
# edit 09/08/19 (gboehl): add boundaries for all (from PF)

declarations:
  name: 'sw_h2m'
  variables: [eps_fin, rktilde, spread, dc, dy, di, dw, c, c_r, c_h2m, r, rn, i, q, k, kb, rk, w, wh, l, l_r, l_h2m, Pi, y, mc, z, u, g, eps_i, eps_p, eps_w, eps_r, cf, cf_r, cf_h2m, rf, i_f, qf, kf, kbf, rkf, whf, lf, lf_r, lf_h2m, yf, y_gap]

equations:
  model:
    - z      = whf + alpha*(lf-kf)
    - kf     = whf - rkf + lf
    - kf     = (1-psi)/psi*rkf + kbf(-1)
    - i_f   = (1/(1+betabar*gamma))* (  i_f(-1) + betabar*gamma*i_f(1)+(1/(gamma^2*phiss))*qf ) +eps_i
    - kbf   =  (1-k_1)*kbf(-1)+(k_1)*i_f +  (1+betabar*gamma)*(k_1)*(gamma^2*phiss)*eps_i
    - qf     = -rf - u   + (RK/(RK+(1-delta)))*rkf(+1) + ((1-delta)/(RK+(1-delta)))*qf(+1) 
    - yf     = Phi_p*(alpha*kf + (1-alpha)*lf + z)
    - yf     = g + C/Y*cf + I/Y*i_f + RK*K_Y*(1-psi)/psi*rkf

    - cf_r   = (h/gamma)/(1+h/gamma)*cf_r(-1) + (1/(1+h/gamma))*cf_r(1) + ((sig_c-1)*c_2/(sig_c*(1+h/gamma)))*(lf_r-lf_r(1)) - (1-h/gamma)/(sig_c*(1+h/gamma))*(rf + u)
    - cf_h2m = whf + lf_h2m
    - whf    = 1/(1-h/gamma)*(cf_r-h/gamma*cf_r(-1)) + sig_l*lf_r
    - whf    = 1/(1-h/gamma)*(cf_h2m-h/gamma*cf_h2m(-1)) + sig_l*lf_h2m
    - lf     = lamb*lf_h2m+(1-lamb)*lf_r 
    - cf     = lamb*cf_h2m+(1-lamb)*cf_r 

    - c_r   = (h/gamma)/(1+h/gamma)*c_r(-1) + (1/(1+h/gamma))*c_r(1) +((sig_c-1)*c_2/(sig_c*(1+h/gamma)))*(l_r-l_r(1)) - (1-h/gamma)/(sig_c*(1+h/gamma))*(r-Pi(+1)+u)
    - c_h2m = w + l_h2m
    - wh    = 1/(1-h/gamma)*(c_r-h/gamma*c_r(-1)) + sig_l*l_r
    - wh    = 1/(1-h/gamma)*(c_h2m-h/gamma*c_h2m(-1)) + sig_l*l_h2m
    - l     = lamb*l_h2m+(1-lamb)*l_r 
    - c     = lamb*c_h2m+(1-lamb)*c_r 

    - mc    = w - z + alpha*(l-k)
    - rk    = w - k + l
    - k     = (1-psi)/psi*rk + kb(-1)
    - i     = (1/(1+betabar*gamma))* (  i(-1) + betabar*gamma*i(1)+(1/(gamma^2*phiss))*q ) +eps_i
    - w     = (1/(1+betabar*gamma))*w(-1)+(betabar*gamma/(1+betabar*gamma))*w(1)+(i_w/(1+betabar*gamma))*Pi(-1)-(1+betabar*gamma*i_w)/(1+betabar*gamma)*Pi+(betabar*gamma)/(1+betabar*gamma)*Pi(1)+ kappa_w*(wh-w) + eps_w
    - kb    = (1-k_1)*kb(-1)+k_1*i + (1+betabar*gamma)*k_1*gamma^2*phiss*eps_i
    - y     = Phi_p*(alpha*k + (1-alpha)*l + z)
    - y     = g + C/Y*c + I/Y*i + RK*K_Y*(1-psi)/psi*rk
    - Pi    = (1/(1+betabar*gamma*i_p)) * (betabar*gamma*Pi(1) +i_p*Pi(-1)) + kappa*mc + eps_p
    - y_gap = y-yf
 
    - rktilde = Pi + (RK/(RK+(1-delta)))*rk + ((1-delta)/(RK+(1-delta)))*q-q(-1) 
    - rktilde(+1) = r + u
    - spread = eps_fin

    - dc    = c - c(-1)
    - dy    = y - y(-1)
    - di    = i - i(-1)
    - dw    = w - w(-1)

    - z     = rho_z*z(-1) + e_z
    - u     = rho_u*u(-1) + e_u
    - eps_i     = rho_i*eps_i(-1) + e_i
    - eps_r     = rho_r*eps_r(-1) + e_r
    - eps_fin = rho_fin*eps_fin(-1)+e_fin

    - g     = rho_g*g(-1) + e_g + rho_gz*e_z
    - eps_p = rho_p*eps_p(-1) + e_p - mu_p*e_p(-1)
    - eps_w = rho_w*eps_w(-1) + e_w - mu_w*e_w(-1)
    - rn     =  rho*rn(-1) + (1-rho)*(phi_pi*Pi + phi_y*y_gap) + phi_dy*(y_gap-y_gap(-1)) + eps_r


  constraint:
    - r     =  rn

  observables:
    GDP  :   trend + dy
    Cons_JPT :   trend + dc
    Inv_JPT  :   trend + di
    Wage :   trend + dw
    Lab  :   mean_l + l 
    Infl :   mean_Pi + Pi
    FFR  :   (PI/((beta)*(gamma)^(-(sig_c)))-1)*100 + r
    BAASpread:  mean_spread + spread 

calibration:
  parafunc:
    sprd    : (1+mean_spread/100)    ## stst spread from perc to gross rate
    PI      : mean_Pi/100+1
    gamma   : trend/100+1
    beta    : 100/(tpr_beta+100)
    betabar : beta*gamma^(-sig_c)
    RR      : 1/betabar
    RK      : 1/betabar*sprd -(1-delta)
    RKstar  : RR*PI*sprd
    lamb_p  : Phi_p
    W       : ((1/lamb_p)*alpha^alpha*(1-alpha)^(1-alpha)*RK^(-alpha))^(1/(1-alpha))
    K       : alpha/(1-alpha)*W/RK*L
    k_1     : (1-(1-delta)/gamma)
    K_Y     : Phi_p*((((1-alpha)/alpha)*(RK/W)))^(alpha-1)
    Y       : K/(K_Y) 
    I       : ((1-(1-delta)/gamma)*gamma)*K
    C       : (1-G_Y)*Y-I
    c_2     : (1/lamb_w)*(1-alpha)/alpha*RK*K/C
    kappa   : (1-zeta_p*betabar*gamma)*(1-zeta_p)/((1+i_p*betabar*gamma)*zeta_p*((Phi_p-1)*epsilon+1))
    kappa_w : (1-zeta_w)*(1-zeta_w*betabar*gamma)/((1+betabar*gamma)*zeta_w*((lamb_w-1)*epsilon+1))
    x_bar  :   -(PI/((beta)*(gamma)^(-(sig_c)))-1)*100 + elb_level

  parameters:
    mean_spread : .5            # if :0, then RK : frictionless RK -> steady state changes
    elb_level: 0.05
    lamb: 0
    epsilon : 10
    lamb_w: 1.5
    L : 0.33

    delta           : 0.025
    tpr_beta: 0.25
    trend: 0.341       # estimated trend in sw:full
    mean_l: 4.938   # estimated mean in sw:full
    mean_Pi : 0.784     # estimated mean in sw:full
    alpha   : 0.2
    sig_c   : 1.5
    sig_l   : 2.
    Phi_p   : 1.5
    h       : 0.7
    zeta_w  : 0.7
    zeta_p  : 0.7
    i_w     : 0.4
    i_p     : 0.4
    phiss   : 6.
    psi     : 0.7
    phi_pi  : 1.7
    phi_y   : 0.125
    phi_dy  : 0.125
    G_Y     : 0.18

    rho     : 0.8
    rho_r   : 0.7
    rho_z   : 0.7
    rho_u   : 0.7
    rho_g   : 0.7
    rho_i   : 0.7
    rho_p   : 0.7
    rho_w   : 0.7
    rho_fin : 0.7

    mu_w    : 0.3
    mu_p    : 0.3
    rho_gz  : 0.5
  
    sig_g   : 0.45
    sig_u   : 0.23
    sig_z   : 0.45
    sig_r   : 0.24
    sig_i   : 0.45
    sig_p   : 0.14
    sig_w   : 0.24
    sig_fin : 0.3

  covariances:
    e_z    : sig_z
    e_g    : sig_g
    e_i    : sig_i
    e_u    : sig_u
    e_r    : sig_r
    e_p    : sig_p
    e_w    : sig_w
    e_fin  : sig_fin

estimation:
  prior:

    # name  : [initval, lb, ub, dist_type, dist_p1, dist_p2]

    sig_c   : [1.2312,0.25,3,normal,1.50,0.375]
    sig_l   : [2.8401,-0.5,6,normal,2,0.75]
    tpr_beta: [0.7420,0.01,1.0,gamma,0.25,0.1]
    h       : [0.7205,0.3,0.95,beta,0.7,0.1]
    phiss   : [6.3325,2,12,normal,4,1.5]
    i_p     : [0.3291,0.01,0.9,beta,0.5,0.15]
    i_w     : [0.4425,0.01,0.9,beta,0.5,0.15]
    alpha   : [0.24,0.05,0.4,normal,0.3,0.05]
    zeta_p  : [0.7813,0.4,0.99,beta,0.5,0.10]
    zeta_w  : [0.7937,0.4,0.99,beta,0.5,0.1]
    Phi_p   : [1.4672,1.0,2.0,normal,1.25,0.125]
    psi     : [0.2648,0.01,.99,beta,0.5,0.15]

    phi_pi  : [1.7985,.7,2.5,normal,1.5,0.25]
    phi_y   : [0.0893,0.001,0.6,normal,0.125,0.05]
    phi_dy  : [0.2239,0.001,0.6,normal,0.125,0.05]
    rho     : [0.8258,0.3,0.975,beta,0.75,0.10]

    rho_r   : [.3,.01,.9999,beta,0.5,0.2]
    rho_g   : [.9930,.01,.9999,beta,0.5,0.2]
    rho_z   : [.9676 ,.01,.9999,beta,0.5,0.2]
    rho_u   : [.2703,.01,.9999,beta,0.5,0.2]
    rho_p   : [.8692,.001,.9999,beta,0.5,0.2]
    rho_w   : [.9546,.001,.9999,beta,0.5,0.2]
    rho_i   : [.5724,.01,.9999,beta,0.5,0.2]

    mu_p    : [.7652,0.01,.9999,beta,0.5,0.2]
    mu_w    : [.8936,0.01,.9999,beta,0.5,0.2]
    rho_gz  : [0.05,0.01,1.5,normal,0.5,0.25]

    sig_g : [0.6090,0.01,3,inv_gamma_dynare,0.1,2]
    sig_u : [0.1818513,0.025,9,inv_gamma_dynare,0.1,2]
    sig_z : [0.4618,0.01,3,inv_gamma_dynare,0.1,2]
    sig_r : [0.2397,0.01,3,inv_gamma_dynare,0.1,2]
    sig_p : [0.1455,0.01,3,inv_gamma_dynare,0.1,2]
    sig_w : [0.2089,0.01,3,inv_gamma_dynare,0.1,2]
    sig_i : [0.46017,0.01,3,inv_gamma_dynare,0.1,2]

    rho_fin : [.95,.001,.9999,beta,0.5,0.2]
    sig_fin : [0.05,0.01,3,inv_gamma_dynare,0.1,2]

    trend : [0.3982,0.1,0.8,normal,0.44,0.05]   # Kulish et al. (2017)
    mean_l : [4.2918,-4.0,4.0,normal,0.0,2.0]
    mean_Pi : [0.7,0.1,2.0,gamma,0.625,0.1]
    mean_spread : [.5,.1,2.,normal,.5,.1]
